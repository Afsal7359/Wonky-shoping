<div class="cart-main-area ptb-100">
    <div class="container-fluid">
        <div class="row">
            <div class="col-xl-12 col-lg-12 col-md-12 col-12">
                <h1 class="cart-heading">Cart</h1>
                <form action="#">
                    <div class="table-content table-responsive">
                        <table>
                            <thead class="tbhead">
                                <tr>
                                    <th class="product-name">Remove</th>
                                    <th class="product-price">Images</th>
                                    <th class="product-name">Product</th>
                                    <th class="product-code">Code</th>
                                    <th class="product-size">Size</th>
                                    <th class="product-price">Price</th>
                                    <th class="product-quantity">Quantity</th>
                                    <th class="product-subtotal">Total</th>
                                </tr>
                            </thead>
                            <h4 class="text-danger text-center">Cart Empty !!!</h4>
                            <tbody id="cartItems">
                                <!-- Items will be populated here -->
                              
                            </tbody>
                        </table>
                    </div>
                    <div class="row">
                        <div class="col-lg-5 ms-auto col-md-12 col-12">
                            <div class="cart-total">
                                <h2>Cart totals</h2>
                                <ul>
                                    <li>Subtotal <span id="subtotal">0.00</span></li>
                                    <li>Total <span id="total">0.00</span></li>
                                </ul>
                                <a href="#" id="checkoutButton" target="_blank">Proceed to checkout</a>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const cartItemsContainer = document.getElementById('cartItems');
        const subtotalElement = document.getElementById('subtotal');
        const totalElement = document.getElementById('total');
        const checkoutButton = document.getElementById('checkoutButton');
        const cartHeading = document.querySelector('.cart-heading');
        const cartTotalContainer = document.querySelector('.cart-total');
        const tabledisplay = document.querySelector('.tbhead')
        const emptyhead = document.querySelector('.text-danger')

        // Function to load cart items from localStorage
        function loadCartItems() {
            let cart = JSON.parse(localStorage.getItem('cart')) || [];
            cartItemsContainer.innerHTML = ''; // Clear any existing items
            let subtotal = 0;

            if (cart.length === 0) {
                cartHeading.classList.add('hidden');
                cartTotalContainer.classList.add('hidden');
                tabledisplay.classList.add('hidden')
                emptyhead.classList.remove('hidden')
               
            } else {
                cartHeading.classList.remove('hidden');
                cartTotalContainer.classList.remove('hidden');
                tabledisplay.classList.remove('hidden')
                emptyhead.classList.add('hidden')
            }

            cart.forEach(item => {
                let itemTotal = item.price * item.quantity;
                subtotal += itemTotal;

                // Create a new row for each cart item
                let row = document.createElement('tr');

                row.innerHTML = `
                    <td class="product-remove"><a href="#" class="remove-item" data-code="${item.code}" data-size="${item.size}"><i class="fa fa-times"></i></a></td>
                    <td class="product-thumbnail"><a href="#"><img src="${item.image}" height="65px" alt=""></a></td>
                    <td class="product-name"><a href="#">${item.name}</a></td>
                     <td class="product-name"><a href="#">${item.code}</a></td>
                    <td class="product-size"><a href="#">${item.size}</a></td>
                    <td class="product-price"><span class="amount">₹${item.price}</span></td>
                    <td class="product-quantity"><input value="${item.quantity}" type="number" min="1" class="quantity-input" data-code="${item.code}" data-size="${item.size}"></td>
                    <td class="product-subtotal">₹${itemTotal}</td>
                `;

                cartItemsContainer.appendChild(row);
            });

            // Update the subtotal and total
            subtotalElement.textContent = `₹${subtotal}`;
            totalElement.textContent = `₹${subtotal}`;
        }

        // Function to update cart item quantity in localStorage
        function updateCartItem(code, size, quantity) {
            let cart = JSON.parse(localStorage.getItem('cart')) || [];
            let itemIndex = cart.findIndex(item => item.code === code && item.size === size);

            if (itemIndex !== -1) {
                cart[itemIndex].quantity = quantity;
                localStorage.setItem('cart', JSON.stringify(cart));
                loadCartItems(); // Reload cart items to reflect changes
            }
        }

        // Function to remove cart item from localStorage
        function removeCartItem(code, size) {
            let cart = JSON.parse(localStorage.getItem('cart')) || [];
            cart = cart.filter(item => !(item.code === code && item.size === size));
            localStorage.setItem('cart', JSON.stringify(cart));
            loadCartItems(); // Reload cart items to reflect changes
        }

        // Event listener for quantity change
        cartItemsContainer.addEventListener('input', function (e) {
            if (e.target.classList.contains('quantity-input')) {
                let newQuantity = parseInt(e.target.value);
                let code = e.target.getAttribute('data-code');
                let size = e.target.getAttribute('data-size');
                if (newQuantity >= 1) {
                    updateCartItem(code, size, newQuantity);
                }
            }
        });

        // Event listener for remove button
        cartItemsContainer.addEventListener('click', function (e) {
            if (e.target.classList.contains('remove-item') || e.target.parentElement.classList.contains('remove-item')) {
                e.preventDefault();
                let code = e.target.getAttribute('data-code') || e.target.parentElement.getAttribute('data-code');
                let size = e.target.getAttribute('data-size') || e.target.parentElement.getAttribute('data-size');
                removeCartItem(code, size);
            }
        });

        // Event listener for checkout button
        checkoutButton.addEventListener('click', function (e) {
            e.preventDefault();
            let cart = JSON.parse(localStorage.getItem('cart')) || [];
            if (cart.length === 0) {
                alert('Your cart is empty');
                return;
            }

            let message = `Order Details \n`;
            cart.forEach(item => {
                message += `Product: ${item.name}\n`;
                message += `Product Code: ${item.code}\n`;
                message += `Price: ₹${item.price}\n`;
                message += `Quantity: ${item.quantity}\n`;
                message += `Size: ${item.size}\n`;
                message += `Total: ₹${item.price * item.quantity}\n\n`;
            });
            message += `Grand Total: ${totalElement.textContent}`;

            // Encode the message
            let encodedMessage = encodeURIComponent(message);

            console.log(encodedMessage, "encodedMessage");

            let whatsappUrl = `https://wa.me/7012060213?text=${encodedMessage}`;
            window.open(whatsappUrl, '_blank');
            localStorage.removeItem('cart');
            window.location.href='/'
        });

        // Load cart items on page load
        loadCartItems();
    });
</script>
<style>
    .hidden {
        display: none;
    }
</style>